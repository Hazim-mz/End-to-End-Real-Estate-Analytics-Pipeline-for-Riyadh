{"timestamp":"2025-07-21T02:06:34.113076","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-21T02:06:34.114204","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline_v2.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-21T02:06:34.785843","level":"warning","event":"Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.","category":"FutureWarning","filename":"/opt/airflow/dags/etl_pipeline_v2.py","lineno":57,"logger":"py.warnings"}
{"timestamp":"2025-07-21T02:06:34.811547","level":"info","event":"Successfully connected to PostgreSQL database","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.815419","level":"info","event":"Tables already exist, skipping creation","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.820538","level":"info","event":"Found unique constraint(s): ['properties_property_id_key']","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.821097","level":"info","event":"Loading 7 properties to database using batch UPSERT","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.821726","level":"info","event":"Property IDs in data: 7 unique IDs","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.823053","level":"info","event":"Found 8 existing property_ids in database","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.824007","level":"info","event":"Found 7 existing property_ids that will be updated","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.824188","level":"info","event":"Sample duplicate IDs: ['52b52a55-f98a-4d98-865a-98721c63082c', 'f7514515-0800-469e-997c-80b51c60127a', 'f67f43f9-17fd-4dda-8075-f1f2d585e3d0', '1bda0555-4030-4105-82e4-dc924fe3d11c', 'c5cb1da6-50a1-4074-a14d-f65982d0b0e1']","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.834652","level":"info","event":"Executing batch UPSERT with 7 records","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.834905","level":"info","event":"UPSERT Query: \n            INSERT INTO properties (property_id, title, price, bedrooms, area, bathrooms, property_type, property_type_standard, price_per_sqm, price_per_bedroom, city, neighborhood, listing_type, source, processed_date, created_at)\n            VALUES (:property_id, :title, :price, :bedrooms, :area, :bathrooms, :property_type, :property_type_standard, :price_per_sqm, :price_per_bedroom, :city, :neighborhood, :listing_type, :source, :processed_date, :created_at)\n            ON CONFLICT (property_id) DO UPDATE SET\n                property_id = EXCLUDED.property_id, title = EXCLUDED.title, price = EXCLUDED.price, bedrooms = EXCLUDED.bedrooms, area = EXCLUDED.area, bathrooms = EXCLUDED.bathrooms, property_type = EXCLUDED.property_type, property_type_standard = EXCLUDED.property_type_standard, price_per_sqm = EXCLUDED.price_per_sqm, price_per_bedroom = EXCLUDED.price_per_bedroom, city = EXCLUDED.city, neighborhood = EXCLUDED.neighborhood, listing_type = EXCLUDED.listing_type, source = EXCLUDED.source, processed_date = EXCLUDED.processed_date\n            ","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.841649","level":"info","event":"Batch UPSERT completed successfully","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.841911","level":"info","event":"Successfully batch upserted 7 properties to database from DataFrame","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.842522","level":"info","event":"Database connection closed","logger":"loader"}
{"timestamp":"2025-07-21T02:06:34.843352","level":"info","event":"Done. Returned value was: 7","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-21T02:06:34.843557","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01982ab9-4ee5-791d-a65c-491fdf65e1f0'), task_id='load', dag_id='realestate_etl_pipeline_v2', run_id='manual__2025-07-21T02:04:04.169997+00:00', try_number=1, map_index=-1, hostname='d9baf7fb2a61', context_carrier=None, task=<Task(PythonOperator): load>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 21, 2, 6, 34, 58791, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-07-21T02:06:34.847404Z","level":"info","event":"Loaded 7 properties into database","chan":"stdout","logger":"task"}
