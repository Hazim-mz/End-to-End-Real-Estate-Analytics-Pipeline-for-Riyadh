{"timestamp":"2025-07-21T01:22:43.937804","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-21T01:22:43.938569","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_pipeline_v2.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-21T01:22:44.618530","level":"warning","event":"Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.","category":"FutureWarning","filename":"/opt/airflow/dags/etl_pipeline_v2.py","lineno":25,"logger":"py.warnings"}
{"timestamp":"2025-07-21T01:22:44.636986","level":"info","event":"Removed 23 duplicate property_id records","logger":"transformer"}
{"timestamp":"2025-07-21T01:22:44.637878","level":"warning","event":"\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy","category":"SettingWithCopyWarning","filename":"/opt/airflow/scripts/transformer.py","lineno":269,"logger":"py.warnings"}
{"timestamp":"2025-07-21T01:22:44.638791","level":"warning","event":"\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy","category":"SettingWithCopyWarning","filename":"/opt/airflow/scripts/transformer.py","lineno":270,"logger":"py.warnings"}
{"timestamp":"2025-07-21T01:22:44.639091","level":"warning","event":"\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy","category":"SettingWithCopyWarning","filename":"/opt/airflow/scripts/transformer.py","lineno":273,"logger":"py.warnings"}
{"timestamp":"2025-07-21T01:22:44.738467Z","level":"info","event":"Cleaned 8 properties","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T01:22:44.652956","level":"info","event":"Done. Returned value was: 8","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-21T01:22:44.653196","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01982a91-4a5b-738c-9181-f2d79d4f8381'), task_id='clean_scraped_data', dag_id='realestate_etl_pipeline_v2', run_id='manual__2025-07-21T01:20:21.556549+00:00', try_number=1, map_index=-1, hostname='d9baf7fb2a61', context_carrier=None, task=<Task(PythonOperator): clean_scraped_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 7, 21, 1, 22, 43, 853973, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
